# Copyright (C) 2012 Martin Leadbeater, Michael O'Connor
# 
# This file is part of Latproc
#
# Latproc is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# Latproc is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Latproc; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
CorePerLotStandard VARIABLE (tab:Test) 20; 
CorePerLotLengthStrength CONSTANT (tab:Test) 12; 

Core_CurrentTotalBales VARIABLE (tab:Test) 1;
Core_CurrentCoresPerBale VARIABLE (tab:Test) 0;
OldNoBales VARIABLE (tab:Test) 0;

CALCORESPERBALE MACHINE {
    GLOBAL Core_CurrentTotalBales, Core_CurrentCoresPerBale, CorePerLotStandard, CorePerLotLengthStrength;
    GLOBAL OldNoBales;

    stable WHEN Core_CurrentTotalBales.VALUE == OldNoBales.VALUE;
    recalculate DEFAULT;
    
    ENTER stable { LOG "stable"; }

    ENTER recalculate {
		tmp := 0;
        IF (Core_CurrentTotalBales > 6) {
            tmp := CorePerLotStandard / Core_CurrentTotalBales;
           IF (CorePerLotStandard % Core_CurrentTotalBales != 0) { tmp := tmp + 1; };
        };  
        IF (Core_CurrentTotalBales <= 6) {
           tmp := (CorePerLotLengthStrength / Core_CurrentTotalBales);
           IF (CorePerLotLengthStrength % Core_CurrentTotalBales != 0) { tmp := tmp + 1; };
        };  
        Core_CurrentCoresPerBale := tmp;
        OldNoBales := Core_CurrentTotalBales;   
        LOG "recalculated";
    }   

}

calc CALCORESPERBALE (tab:Test);

Counter MACHINE {
    GLOBAL Core_CurrentTotalBales;
    GLOBAL OldNoBales;

    idle DEFAULT;
    working WHEN Core_CurrentTotalBales.VALUE != OldNoBales.VALUE;
    ENTER idle { Core_CurrentTotalBales := Core_CurrentTotalBales + 1; }
    ENTER working { LOG "working"; }
}
counter Counter(tab:Test);

