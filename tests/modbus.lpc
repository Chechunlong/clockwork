# various modbus interface tests

OUT_1 FLAG(tab:Outputs);
OUT_2 FLAG(tab:Outputs);

A CONSTANT(tab:Tests, export:reg) 123;
B VARIABLE(tab:Tests, export:rw_reg) 456;
C CONSTANT(tab:Tests, export:reg32) 554343;
D VARIABLE(tab:Tests, export:rw_reg32) 10;
E CONSTANT(tab:Tests, export:str) "This is a message";

Calc MACHINE {

    GLOBAL D;
    go DEFAULT;
    ENTER go { offdelay := D * 60000; }
    ENTER INIT { offdelay := D * 60000; }
    OPTION tab Tests;
}
calc Calc;

Monitor MACHINE other {

sample_flag FLAG (export:ro, tab:Tests);
sample_flag2 FLAG (export:rw, tab:Tests);

	on WHEN other.started_flag IS on;
	off DEFAULT;

}
monitor Monitor(tab:Outputs) flash1;

Flash MACHINE (delay:500)output {

	EXPORT STATES on,off,error,ready;
	EXPORT COMMANDS start, stop, toggle;
	EXPORT READWRITE 32BIT delay;
	OPTION export rw;
	OPTION delay 500;
    
    OPTION a 20;
    OPTION b 30;
    EXPORT RW 16BIT a,b;

    started_flag FLAG(tab:Outputs, export:ro);
    error_flag FLAG(tab:Outputs, export:ro);

#    timed_out WHEN started_flag IS on && TIMER >= 1000;
    on WHEN started_flag != off && output IS on;
    off WHEN started_flag != off && output IS off;
    error WHEN error_flag IS on;

    ready DEFAULT;

    starting DURING start { SET started_flag TO on; }
    stopping DURING stop { SET started_flag TO off; }

    TRANSITION ready TO on USING start;
    TRANSITION on,off TO ready USING stop;

	COMMAND toggle { 
		IF (started_flag IS on) { SEND stop TO SELF; } 
		ELSE { SEND start TO SELF; }
	}
	TRANSITION on,off TO ready USING toggle;
	TRANSITION ready TO on USING toggle;

    RECEIVE on_enter FROM SELF { 
		LOG "on"; 
		WAIT delay; 
		SET output TO off ;
	}
    RECEIVE off_enter FROM SELF { LOG "off"; WAIT delay; t := started_flag.TIMER; SET output TO on; }

	ENTER INIT {
		started_flag.tab := tab;
		error_flag.tab := tab;
	}
}

#flash1 Flash (type:Light, tab:Outputs) O_GrabNo1JawOpen;
flash1 Flash (type:Light, tab:Outputs) OUT_1;
#flash2 Flash (type:Light, tab:Outputs) OUT_2;
#flash3 Flash (type:Light, tab:Outputs) OUT_3;
#flash4 Flash (type:Light, tab:Outputs) OUT_4;
#flash5 Flash (type:Light, tab:Outputs) OUT_5;
#flash6 Flash (type:Light, tab:Outputs) OUT_6;

