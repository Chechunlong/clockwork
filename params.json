{"name":"Clockwork","tagline":"A finite statemachine-based language and supporting software for Industrial Control and Simple Automation","body":"Copyright (C) 2012 Martin Leadbeater, Michael O'Connor\r\n\r\nSee the LICENCES file for license information.\r\n\r\nMartin Leadbeater,  martin.leadbeater@gmail.com\r\n\r\n\r\nPLEASE NOTE: \r\n\tThis software is a work in progress and may be tricky to install. We are\r\n   trying to improve this situation and should have some significant improvements \r\n   over the next few months.\r\n\r\n\r\n# Clockwork - Language and Tools for Process Control\r\n\r\n## Introduction\r\n\r\nThis software provides a high level, finite statemachine-based language \r\ncalled Clockwork that can be used to describe process control systems. \r\nCurrently, this software supports the Beckhoff EtherCat system (http://www.beckhoff.de/) \r\nthrough the IgH EtherCAT Master for Linux (http://www.etherlab.org/en/ethercat/index.php)\r\nand has experimental support for Internet of Things integration\r\n\r\nBelow are some instructions to help you build the program please\r\nsee the documentation for details about the language itself.\r\n\r\n## Instructions\r\n\r\n   Note: this software requires that the following software be installed:\r\n\r\n\t* libmodbus (http://libmodbus.org/)  - for communication with modbus/tcp terminals\r\n\r\n\t* zeromq (http://www.zeromq.org/) - for inter-program messaging\r\n\r\n\t* boost (http://boost.org/) - various c++ bits and pieces\r\n\r\n\t* mosquitto (http://mosquitto.org) - MQTT broker and protocol implementation\r\n\r\n\r\n   Part A - Building Latproc tools for standalone experimentation\r\n\r\nThe instructions in this part build the Clockwork programming language interpreter\r\nwithout the need for the IgH EtherCAT Master.\r\n\r\nNote, the Makefile used here assumes libzmq is installed in /usr/local/\r\n\r\n\r\n* pull the latproc project from git\r\n\r\n  git clone git://github.com/latproc/latproc.git latproc\r\n\r\n* change to the latproc directory and build the interpreter\r\n\r\n  cd latproc/iod\r\n  make -f Makefile.cw\r\n\r\n\r\n\r\n\r\n\r\n  \r\n   Part B - setting up the user database for the web interface\r\n\r\n   The user database can be created using scripts/create_webiodb.\r\n\r\n   By default it will be created in www/app with the name 'webio.db' these\r\n     settings can be changed in settings.php\r\n\r\n\r\n\r\n\r\n   Part C - Setting up the IgH EtherCAT software to be used but the Latproc software\r\n\r\n\r\n\r\nThe following instructions are brutally terse at present and we apologise\r\nfor that. Please watch this space for more precise instructions.\r\n\r\n* pull the latproc project from git\r\n\r\n  git clone git://github.com/latproc/latproc.git latproc\r\n\r\n  please do not cd into the latproc directory yet.\r\n\r\n* extract the etherlab kit from the EtherLab website:\r\n    see http://www.etherlab.org/en/ethercat/index.php\r\n\r\n  tar/hg/... etc\r\n\r\n  Note: The following instructions assume your extract was placed into \r\n        a directory called 'ethercat' next to the latproc directory.\r\n  \r\n* configure and build etherlabs ethercat component\r\n\r\n  cd ethercat\r\n  ./configure --enable-generic --enable-e1000e=no --enable-8139too=no\r\n  make\r\n\r\n  (your configure options may be different from ours)\r\n\r\n* the latproc io daemon (iod) uses some parts from ethercat that are \r\n  not built into the ethercat library; the following script prepares\r\n  a build area for these bits (ec_tool). The script needs to know\r\n  the location of the ethercat extract, passed as the first parameter. \r\n\r\n  cd latproc\r\n  scripts/prepare_ec_tool ethercat-path\r\n\r\n* build the object files in the ec_tool build area\r\n\r\n  cd ec_tool\r\n  make\r\n  \r\n* build the latproc tools (in the iod directory)\r\n\r\n  cd ../iod\r\n  make\r\n  \r\nAt this point, the following tools should have been created:\r\n\r\n  iod  : a daemon that talks to EtherCAT to interact with io\r\n  iosh : a shell to interact with iod\r\n  zmq_monitor : a program to monitor zmq messages published by iod\r\n  persistd : a basic persistence daemon to record state changes from iod\r\n\r\nYou may also like to install libmodbus and edit the makefile to build:\r\n\r\n  modbusd : a modbus interface to iod\r\n\r\n## Sponsors\r\n\r\nThanks to our sponsors.\r\n\r\n* ![O'Connor Wooltech Logo](https://github.com/latproc/clockwork/raw/master/doc/wooltech_logo.gif)\r\n [http://www.wooltech.com.au](http://www.wooltech.com.au) \r\n\r\n* ![OEG Australia logo](https://github.com/latproc/clockwork/raw/master/doc/oeg_logo.png)\r\nOEG Australia\r\n\r\n* ![Shuttleworth Funded](https://raw.github.com/latproc/latproc/master/doc/Shuttleworth-Funded.jpg)\r\n [http://www.shuttleworthfoundation.org](http://www.shuttleworthfoundation.org) \r\n\r\n\r\n\r\nhttp://www.wooltech.com.au","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}